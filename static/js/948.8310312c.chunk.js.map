{"version":3,"file":"static/js/948.8310312c.chunk.js","mappings":"mVAEaA,EAAU,kCAEvBC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EAAY,eAEX,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBH,IAAAA,IAAA,uCACWC,EADX,YACsBC,IAFxC,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,uFACkBR,IAAAA,IAAA,iBACXQ,EADW,oBACQP,EADR,YACmBC,IAFrC,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACkBR,IAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,YAC0BC,IAF5C,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,uFACkBR,IAAAA,IAAA,iBACXQ,EADW,4BACgBP,EADhB,YADlB,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBZ,IAAAA,IAAA,gCACIC,EADJ,wCAC2CW,IAF7D,cACCR,EADD,yBAIEA,EAASC,MAJX,oE,kLChCMQ,EAAWC,EAAAA,EAAAA,IAAH,sBACRC,EAAaD,EAAAA,EAAAA,GAAH,sBAEVE,EAAUF,EAAAA,EAAAA,GAAH,6PAYPG,GAAMH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,mG,SCdHK,EAAa,SAAC,GAGpB,IAAD,IAFJC,OAAUC,EAEN,EAFMA,KAAMC,EAEZ,EAFYA,MAAOC,EAEnB,EAFmBA,YAAaC,EAEhC,EAFgCA,GAEhC,IADJC,MAAAA,OACI,MADI,GACJ,EACEC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACX,EAAD,WACE,UAACC,EAAD,CAAKW,GAAE,UAAKH,GAAL,OAAaD,GAAMK,MAAO,CAAEC,KAAMJ,GAAzC,WACE,SAACb,EAAD,CAAUkB,IAAKhC,EAAAA,GAAUwB,EAAaS,IAAI,MAC1C,SAACjB,EAAD,iBAAaO,QAAb,IAAaA,EAAAA,EAASD,UCVjBY,EAAWnB,EAAAA,EAAAA,GAAH,gGAKRoB,EAAYpB,EAAAA,EAAAA,IAAH,iECLTqB,EAAa,SAAC,GAAuB,IAArBf,EAAoB,EAApBA,OAAQK,EAAY,EAAZA,MACnC,OACE,SAACS,EAAD,WACE,SAACD,EAAD,UACGb,EAAOgB,KAAI,SAAAC,GACV,OAAO,SAAClB,EAAD,CAA2BC,OAAQiB,EAAOZ,MAAOA,GAAhCY,EAAMb,YCMxC,EAViB,WACf,MCDoC,WACpC,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAemB,EAAf,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAW,GADb,mBAGgCtC,EAAAA,EAAAA,MAHhC,OAGUwC,EAHV,OAIIJ,EAAUI,GAJd,gDAMIC,QAAQC,IAAR,MANJ,yBAQIJ,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdK,KACC,IACI,CAAE1B,OAAAA,EAAQoB,UAAAA,GDjBEO,GAAX3B,EAAR,EAAQA,OACR,OACE,4BACE,4CACA,SAACe,EAAD,CAAYf,OAAQA,EAAQK,MAAO","sources":["services/apiService.js","components/MoviesCard/MoviesCard.styled.jsx","components/MoviesCard/MoviesCard.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","views/HomeView.jsx","hooks/useFetchTrendingMovies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bc1d8643395b3b7e7b983675d8b7669b';\nconst UKR_Language = `&language=uk`;\n\nexport async function getTrending() {\n  const response = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&${UKR_Language}`\n  );\n  return response.data.results;\n}\n\nexport async function getDetalis(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&${UKR_Language}`\n  );\n  return response.data;\n}\nexport async function movieCredits(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&${UKR_Language}`\n  );\n  return response.data;\n}\nexport async function getReviews(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n}\n\nexport async function getSearchMovies(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return response.data;\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const MovieImg = styled.img``;\nexport const MovieTitle = styled.h2``;\n\nexport const MovieLi = styled.li`\n  box-shadow: 0 0 1em rgba(0, 0, 0, 0.5);\n  &:hover {\n    transform: translate(-5px, -5px);\n    transition-property: transform;\n    transition-duration: 300ms;\n  }\n\n  width: 250px;\n  text-align: center;\n  margin: 20px;\n`;\nexport const Nav = styled(Link)`\n  text-decoration: none;\n\n  font-size: 12px;\n  font-family: Noto Sans;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { IMG_URL } from 'services/apiService';\nimport { MovieImg, MovieTitle, MovieLi, Nav } from './MoviesCard.styled';\nexport const MoviesCard = ({\n  movies: { name, title, poster_path, id },\n  route = '',\n}) => {\n  const location = useLocation();\n  return (\n    <MovieLi>\n      <Nav to={`${route}${id}`} state={{ from: location }}>\n        <MovieImg src={IMG_URL + poster_path} alt=\"\" />\n        <MovieTitle>{title ?? name}</MovieTitle>\n      </Nav>\n    </MovieLi>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MoviesUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nexport const Container = styled.div`\n  max-width: 1300px;\n  margin: 0 auto;\n`;\n","import { MoviesCard } from 'components/MoviesCard/MoviesCard';\nimport { MoviesUl, Container } from './MoviesList.styled';\nexport const MoviesList = ({ movies, route }) => {\n  return (\n    <Container>\n      <MoviesUl>\n        {movies.map(movie => {\n          return <MoviesCard key={movie.id} movies={movie} route={route} />;\n        })}\n      </MoviesUl>\n    </Container>\n  );\n};\n","import { useFetchTrendingMovies } from 'hooks/useFetchTrendingMovies';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst HomeView = () => {\n  const { movies } = useFetchTrendingMovies();\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <MoviesList movies={movies} route={'movies/'} />\n    </div>\n  );\n};\n\nexport default HomeView;\n","import { getTrending } from 'services/apiService';\nimport { useEffect, useState } from 'react';\n\nexport const useFetchTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function getFilms() {\n      setLoading(true);\n      try {\n        const trendingFilms = await getTrending();\n        setMovies(trendingFilms);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getFilms();\n  }, []);\n  return { movies, isLoading };\n};\n"],"names":["IMG_URL","axios","API_KEY","UKR_Language","getTrending","response","data","results","getDetalis","movieId","movieCredits","getReviews","getSearchMovies","query","MovieImg","styled","MovieTitle","MovieLi","Nav","Link","MoviesCard","movies","name","title","poster_path","id","route","location","useLocation","to","state","from","src","alt","MoviesUl","Container","MoviesList","map","movie","useState","setMovies","isLoading","setLoading","useEffect","trendingFilms","console","log","getFilms","useFetchTrendingMovies"],"sourceRoot":""}