{"version":3,"file":"static/js/363.551740d9.chunk.js","mappings":"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","sources":["services/apiService.js","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","views/MovieDetailsView.jsx","hooks/useFetchDetailsMovie.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bc1d8643395b3b7e7b983675d8b7669b';\nconst UKR_Language = `&language=uk`;\n\nexport async function getTrending() {\n  const response = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&${UKR_Language}`\n  );\n  return response.data.results;\n}\n\nexport async function getDetalis(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&${UKR_Language}`\n  );\n  return response.data;\n}\nexport async function movieCredits(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&${UKR_Language}`\n  );\n  return response.data;\n}\nexport async function getReviews(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n}\n\nexport async function getSearchMovies(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return response.data;\n}\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  max-width: 1300px;\n  margin: 0 auto;\n  margin-bottom: 20px;\n  & p {\n    margin-bottom: 10px;\n  }\n`;\nexport const PosterFilm = styled.img`\n  width: 400px;\n  margin-bottom: 20px;\n`;\nexport const NameFilm = styled.h2`\n  font-size: 40px;\n  line-height: 40px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieDescription = styled.div`\n  flex-basis: 60%;\n`;\n\nexport const VoteAverage = styled.p`\n  margin-bottom: 10px;\n`;\nexport const Ganre = styled.ul`\n  list-style: square inside;\n  margin-bottom: 10px;\n`;\nexport const Navigations = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Link = styled(NavLink)`\n  color: red;\n  padding: 15px;\n  text-decoration: none;\n  &.active {\n    color: blue;\n  }\n  :hover {\n    opacity: 0.85;\n  }\n`;\n","import {\n  Container,\n  PosterFilm,\n  NameFilm,\n  MovieDescription,\n  VoteAverage,\n  Ganre,\n  Navigations,\n  Link,\n} from './MovieDetails.styled';\n\nimport { IMG_URL } from 'services/apiService';\nexport const MovieDetails = ({ filmDetails }) => {\n  const {\n    name,\n    title,\n    poster_path,\n    release_date,\n    vote_average,\n    overview,\n    genres = [{ id: ``, name: '' }],\n  } = filmDetails;\n\n  return (\n    <>\n      <Container>\n        <div>\n          <PosterFilm src={IMG_URL + poster_path} alt={title ?? name} />\n          <Navigations>\n            <Link to=\"cast\">Cast</Link>\n            <Link to=\"reviews\">Reviews</Link>\n          </Navigations>\n        </div>\n\n        <MovieDescription>\n          <NameFilm>{title ?? name}</NameFilm>\n          <p>Дата релизу : {release_date}</p>\n          <VoteAverage>Середня кількість голосів : {vote_average}</VoteAverage>\n          <Ganre>\n            Жанр:\n            {genres.map(ganre => (\n              <li key={ganre.id}>{ganre.name}</li>\n            ))}\n          </Ganre>\n          <p>{overview}</p>\n        </MovieDescription>\n      </Container>\n    </>\n  );\n};\n","import { useFetchDetailsOneFilm } from 'hooks/useFetchDetailsMovie';\n\nimport { MovieDetails } from 'components/MovieDetails/MovieDetails';\nimport { Outlet } from 'react-router-dom';\n\nconst MovieDetailsView = () => {\n  const { filmDetails } = useFetchDetailsOneFilm();\n\n  return (\n    <div>\n      <MovieDetails filmDetails={filmDetails} />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsView;\n","import { getDetalis } from 'services/apiService';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchDetailsOneFilm = () => {\n  const [filmDetails, setFilm] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  let { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovie() {\n      setIsLoading(true);\n      try {\n        const movieData = await getDetalis(movieId);\n        setFilm(movieData);\n      } catch (error) {\n        // setError(error);\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovie();\n  }, [movieId]);\n\n  return { filmDetails, isLoading };\n};\n"],"names":["IMG_URL","axios","API_KEY","UKR_Language","getTrending","response","data","results","getDetalis","movieId","movieCredits","getReviews","getSearchMovies","query","Container","styled","PosterFilm","NameFilm","MovieDescription","VoteAverage","Ganre","Navigations","Link","NavLink","MovieDetails","filmDetails","name","title","poster_path","release_date","vote_average","overview","genres","id","src","alt","to","map","ganre","useState","setFilm","isLoading","setIsLoading","useParams","useEffect","movieData","console","log","message","getMovie","useFetchDetailsOneFilm"],"sourceRoot":""}