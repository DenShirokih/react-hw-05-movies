{"version":3,"file":"static/js/133.04ab02da.chunk.js","mappings":"mVAEaA,EAAU,kCAEvBC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EAAY,eAEX,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBH,IAAAA,IAAA,uCACWC,EADX,YACsBC,IAFxC,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,uFACkBR,IAAAA,IAAA,iBACXQ,EADW,oBACQP,EADR,YACmBC,IAFrC,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACkBR,IAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,YAC0BC,IAF5C,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,uFACkBR,IAAAA,IAAA,iBACXQ,EADW,4BACgBP,EADhB,YADlB,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBZ,IAAAA,IAAA,gCACIC,EADJ,wCAC2CW,IAF7D,cACCR,EADD,yBAIEA,EAASC,MAJX,oE,qKCjCMQ,EAAmBC,EAAAA,EAAAA,IAAH,iEAIhBC,EAAaD,EAAAA,EAAAA,IAAH,gDAGVE,EAAaF,EAAAA,EAAAA,GAAH,+CAGVG,EAAUH,EAAAA,EAAAA,EAAH,sB,SCVPI,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAChC,OACE,UAACL,EAAD,YACE,SAACC,EAAD,UAAaG,KACb,SAACF,EAAD,UAAUG,QCWhB,EAboB,WAClB,MCAkC,WAClC,OAA6BC,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMjB,GAAYkB,EAAAA,EAAAA,MAAZlB,QAiBN,OAfAmB,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEF,GAAa,GADf,mBAGyBf,EAAAA,EAAAA,IAAWF,GAHpC,OAGUoB,EAHV,OAIIL,EAAUK,EAAOtB,SAJrB,gDAMIuB,QAAQC,IAAI,KAAMC,QAAS,qCAN/B,yBAQIN,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdO,KACC,CAACxB,IAEG,CAAEc,QAAAA,EAASE,UAAAA,GDrBES,GAAZX,EAAR,EAAQA,QAGR,OACE,SAACT,EAAD,UACGS,EAAQY,KAAI,YAA8B,IAA3Bf,EAA0B,EAA1BA,OAAQgB,EAAkB,EAAlBA,GAAIf,EAAc,EAAdA,QAC1B,OAAO,SAACF,EAAD,CAAkBC,OAAQA,EAAQC,QAASA,GAA7Be","sources":["services/apiService.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","views/ReviewsView.jsx","hooks/useFetchReviewsMovie.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bc1d8643395b3b7e7b983675d8b7669b';\nconst UKR_Language = `&language=uk`;\n\nexport async function getTrending() {\n  const response = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&${UKR_Language}`\n  );\n  return response.data.results;\n}\n\nexport async function getDetalis(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&${UKR_Language}`\n  );\n  return response.data;\n}\nexport async function movieCredits(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&${UKR_Language}`\n  );\n  return response.data;\n}\nexport async function getReviews(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n}\n\nexport async function getSearchMovies(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return response.data;\n}\n","import styled from '@emotion/styled';\nexport const ReviewsContainer = styled.div`\n  max-width: 1300px;\n  margin: 0 auto;\n`;\nexport const ReviewCard = styled.div`\n  margin-bottom: 15px;\n`;\nexport const AuthorName = styled.h4`\n  margin-bottom: 5px;\n`;\nexport const Content = styled.p``;\n","import { ReviewCard, AuthorName, Content } from './Reviews.styled';\nexport const Reviews = ({ author, content }) => {\n  return (\n    <ReviewCard>\n      <AuthorName>{author}</AuthorName>\n      <Content>{content}</Content>\n    </ReviewCard>\n  );\n};\n","import { useFetchReviewsMovie } from 'hooks/useFetchReviewsMovie';\nimport { ReviewsContainer } from 'components/Reviews/Reviews.styled';\nimport { Reviews } from 'components/Reviews/Reviews';\nconst ReviewsView = () => {\n  const { reviews } = useFetchReviewsMovie();\n\n\n  return (\n    <ReviewsContainer>\n      {reviews.map(({ author, id, content }) => {\n        return <Reviews key={id} author={author} content={content} />;\n      })}\n    </ReviewsContainer>\n  );\n};\n\nexport default ReviewsView;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/apiService';\n\nexport const useFetchReviewsMovie = () => {\n  const [reviews, setReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  let { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovies() {\n      setIsLoading(true);\n      try {\n        const review = await getReviews(movieId);\n        setReview(review.results);\n      } catch (error) {\n        console.log(error.message, 'ERROR by useFatchReviewsOfTheFilm');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, [movieId]);\n\n  return { reviews, isLoading };\n};\n"],"names":["IMG_URL","axios","API_KEY","UKR_Language","getTrending","response","data","results","getDetalis","movieId","movieCredits","getReviews","getSearchMovies","query","ReviewsContainer","styled","ReviewCard","AuthorName","Content","Reviews","author","content","useState","reviews","setReview","isLoading","setIsLoading","useParams","useEffect","review","console","log","message","getMovies","useFetchReviewsMovie","map","id"],"sourceRoot":""}